cmake_minimum_required(VERSION 3.1.0)
project(ouster_ros)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
set(CMAKE_CXX_FLAGS_DEBUG "-O0 -g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")

find_package(PkgConfig REQUIRED)
pkg_check_modules(jsoncpp REQUIRED jsoncpp)

find_package(
  catkin REQUIRED
  COMPONENTS message_generation
             std_msgs
             sensor_msgs
             geometry_msgs
             pcl_ros
             pcl_conversions
             roscpp
             ouster_client
             ouster_viz
             tf2
             tf2_ros
             tf2_geometry_msgs
             cv_bridge
             image_transport
             dynamic_reconfigure)

add_message_files(FILES PacketMsg.msg)
add_service_files(FILES OS1ConfigSrv.srv)
generate_messages(DEPENDENCIES std_msgs sensor_msgs geometry_msgs)

include_directories(include ${catkin_INCLUDE_DIRS})
generate_dynamic_reconfigure_options(cfg/OusterOS1.cfg)

catkin_package(
  INCLUDE_DIRS
  include
  LIBRARIES
  ouster_ros
  CATKIN_DEPENDS
  roscpp
  message_runtime
  pcl_ros
  std_msgs
  sensor_msgs
  geometry_msgs
  cv_bridge
  image_transport
  ouster_client
  ouster_viz)

add_library(ouster_ros STATIC src/os1_ros.cpp)
set_target_properties(ouster_ros PROPERTIES POSITION_INDEPENDENT_CODE ON)
target_link_libraries(ouster_ros ${catkin_LIBRARIES})
add_dependencies(ouster_ros ${PROJECT_NAME}_gencpp)

add_executable(os1_node src/os1_node.cpp)
target_link_libraries(os1_node ouster_ros ${catkin_LIBRARIES})
add_dependencies(os1_node ${PROJECT_NAME}_gencpp)

add_executable(os1_cloud_node src/os1_cloud_node.cpp)
target_link_libraries(os1_cloud_node ouster_ros ${catkin_LIBRARIES})
add_dependencies(os1_cloud_node ${PROJECT_NAME}_gencpp)

add_executable(viz_node src/viz_node.cpp)
target_link_libraries(viz_node ${catkin_LIBRARIES})
add_dependencies(viz_node ${PROJECT_NAME}_gencpp)

add_executable(img_node src/img_node.cpp)
target_link_libraries(img_node ouster_ros ${catkin_LIBRARIES})
add_dependencies(img_node ${PROJECT_NAME}_gencpp)

# decoder
add_executable(os1_decoder src/os1_decoder.cpp)
target_include_directories(os1_decoder PUBLIC ${catkin_INCLUDE_DIRS} include)
target_link_libraries(os1_decoder PUBLIC ${catkin_LIBRARIES} ouster_ros)
add_dependencies(os1_decoder ${PROJECT_NAME}_gencfg)

install(
  TARGETS os1_node os1_cloud_node viz_node img_node os1_decoder
  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})
install(FILES os1.launch DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}/launch)
install(DIRECTORY launch DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION})
